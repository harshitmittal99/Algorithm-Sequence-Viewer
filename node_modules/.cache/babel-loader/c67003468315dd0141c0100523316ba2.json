{"ast":null,"code":"import _classCallCheck from\"/home/mukul/Desktop/react/learnreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukul/Desktop/react/learnreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/mukul/Desktop/react/learnreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mukul/Desktop/react/learnreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./Sortingvisualizer.css';import GetAnimationArray from'./algorithms/MergeSortAlgo.js';var Sortingvisualizer=/*#__PURE__*/function(_React$Component){_inherits(Sortingvisualizer,_React$Component);var _super=_createSuper(Sortingvisualizer);function Sortingvisualizer(props){var _this;_classCallCheck(this,Sortingvisualizer);_this=_super.call(this,props);_this.state={array:[]};return _this;}_createClass(Sortingvisualizer,[{key:\"componentDidMount\",value:function componentDidMount(){this.resetArray();}},{key:\"resetArray\",value:function resetArray(){var array_length=200;var array=[];for(var i=0;i<array_length;i++){array.push(randomInt(5,1000));}this.setState({array:array});}},{key:\"MergeSort\",value:function MergeSort(){console.log(\"h\");this.setState({array:GetAnimationArray(this.state.array)});}},{key:\"QuickSort\",value:function QuickSort(){}},{key:\"HeapSort\",value:function HeapSort(){}},{key:\"BubbleSort\",value:function BubbleSort(){}},{key:\"render\",value:function render(){var _this2=this;var array=this.state.array;var array_length=array.length;var width_of_bar=(window.innerWidth-120)/array_length-2;var height_of_bar=window.innerHeight/1100;return/*#__PURE__*/React.createElement(\"div\",{className:\"array-container\"},array.map(function(value,idx){return/*#__PURE__*/React.createElement(\"div\",{className:\"array-bar\",key:idx,style:{width:\"\".concat(width_of_bar,\"px\"),height:\"\".concat(value*height_of_bar,\"px\")}});}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.resetArray();}},\"Reset Array\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.MergeSort();}},\"merge sort\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.QuickSort();}},\"quick sort\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.HeapSort();}},\"heap sort\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.BubbleSort();}},\"bubble sort\"));}}]);return Sortingvisualizer;}(React.Component);function randomInt(min,max){return Math.floor(Math.random()*(max-min+1)+min);}export default Sortingvisualizer;","map":{"version":3,"sources":["/home/mukul/Desktop/react/learnreact/src/components/Sortingvisualizer.js"],"names":["React","GetAnimationArray","Sortingvisualizer","props","state","array","resetArray","array_length","i","push","randomInt","setState","console","log","length","width_of_bar","window","innerWidth","height_of_bar","innerHeight","map","value","idx","width","height","MergeSort","QuickSort","HeapSort","BubbleSort","Component","min","max","Math","floor","random"],"mappings":"4lBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,yBAAP,CACA,MAAOC,CAAAA,iBAAP,KAA8B,+BAA9B,C,GAEMC,CAAAA,iB,kIACF,2BAAYC,KAAZ,CAAkB,mDACd,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAE,EADE,CAAb,CAHc,aAMjB,C,2FAEkB,CACf,KAAKC,UAAL,GACH,C,+CAGW,CACR,GAAMC,CAAAA,YAAY,CAAG,GAArB,CACA,GAAMF,CAAAA,KAAK,CAAC,EAAZ,CACA,IAAI,GAAIG,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACD,YAAd,CAA2BC,CAAC,EAA5B,CAA+B,CAC3BH,KAAK,CAACI,IAAN,CAAWC,SAAS,CAAC,CAAD,CAAG,IAAH,CAApB,EACH,CACD,KAAKC,QAAL,CAAc,CAACN,KAAK,CAAEA,KAAR,CAAd,EACH,C,6CAEU,CACPO,OAAO,CAACC,GAAR,CAAY,GAAZ,EACA,KAAKF,QAAL,CAAc,CAACN,KAAK,CAAEJ,iBAAiB,CAAC,KAAKG,KAAL,CAAWC,KAAZ,CAAzB,CAAd,EACH,C,6CACU,CAAE,C,2CACH,CAAE,C,+CACA,CAAE,C,uCAEL,oBACEA,CAAAA,KADF,CACS,KAAKD,KADd,CACEC,KADF,CAEL,GAAME,CAAAA,YAAY,CAAGF,KAAK,CAACS,MAA3B,CACA,GAAMC,CAAAA,YAAY,CAAI,CAACC,MAAM,CAACC,UAAP,CAAkB,GAAnB,EAAwBV,YAAzB,CAAuC,CAA5D,CACA,GAAMW,CAAAA,aAAa,CAAIF,MAAM,CAACG,WAAR,CAAqB,IAA3C,CAEA,mBACI,2BAAK,SAAS,CAAC,iBAAf,EACKd,KAAK,CAACe,GAAN,CAAU,SAACC,KAAD,CAAOC,GAAP,qBACP,2BAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAEA,GAAhC,CAAqC,KAAK,CACtC,CAACC,KAAK,WAAIR,YAAJ,MAAN,CAA2BS,MAAM,WAAIH,KAAK,CAACH,aAAV,MAAjC,CADJ,EADO,EAAV,CADL,cAMI,8BAAQ,OAAO,CAAE,yBAAO,CAAA,MAAI,CAACZ,UAAL,EAAP,EAAjB,gBANJ,cAOI,8BAAQ,OAAO,CAAE,yBAAO,CAAA,MAAI,CAACmB,SAAL,EAAP,EAAjB,eAPJ,cAQI,8BAAQ,OAAO,CAAE,yBAAO,CAAA,MAAI,CAACC,SAAL,EAAP,EAAjB,eARJ,cASI,8BAAQ,OAAO,CAAE,yBAAO,CAAA,MAAI,CAACC,QAAL,EAAP,EAAjB,cATJ,cAUI,8BAAQ,OAAO,CAAE,yBAAO,CAAA,MAAI,CAACC,UAAL,EAAP,EAAjB,gBAVJ,CADJ,CAcH,C,+BAnD2B5B,KAAK,CAAC6B,S,EAuDtC,QAASnB,CAAAA,SAAT,CAAmBoB,GAAnB,CAAuBC,GAAvB,CAA2B,CACvB,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAeH,GAAG,CAACD,GAAJ,CAAQ,CAAvB,EAA0BA,GAArC,CAAP,CACH,CAGD,cAAe5B,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport './Sortingvisualizer.css';\nimport GetAnimationArray from './algorithms/MergeSortAlgo.js';\n\nclass Sortingvisualizer extends React.Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            array: []\n        };\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n\n    resetArray(){\n        const array_length = 200;\n        const array=[];\n        for(let i=0;i<array_length;i++){\n            array.push(randomInt(5,1000));\n        }\n        this.setState({array: array});\n    }\n    \n    MergeSort(){\n        console.log(\"h\");\n        this.setState({array: GetAnimationArray(this.state.array)});\n    }\n    QuickSort(){}\n    HeapSort(){}\n    BubbleSort(){}   \n\n    render() {\n        const {array}=this.state;\n        const array_length = array.length;\n        const width_of_bar = ((window.innerWidth-120)/array_length)-2;\n        const height_of_bar = (window.innerHeight)/1100; \n\n        return (\n            <div className=\"array-container\">\n                {array.map((value,idx) => (\n                    <div className=\"array-bar\" key={idx} style={\n                        {width:`${width_of_bar}px`,height:`${value*height_of_bar}px`}\n                    }></div>\n                ))}\n                <button onClick={() => (this.resetArray())}>Reset Array</button>\n                <button onClick={() => (this.MergeSort())}>merge sort</button>\n                <button onClick={() => (this.QuickSort())}>quick sort</button>\n                <button onClick={() => (this.HeapSort())}>heap sort</button>\n                <button onClick={() => (this.BubbleSort())}>bubble sort</button>\n            </div>\n        );\n    }\n\n}\n\nfunction randomInt(min,max){\n    return Math.floor(Math.random()*(max-min+1)+min);\n}\n\n\nexport default Sortingvisualizer;"]},"metadata":{},"sourceType":"module"}